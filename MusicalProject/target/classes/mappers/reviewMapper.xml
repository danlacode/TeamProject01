<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.human.dao.IReviewDao">

<select id="selectAll" parameterType="map" resultType="com.human.dto.ReviewDto">
select * from review where musical_id=#{musical_id} order by case 
	when #{vo.sort,jdbcType=VARCHAR}='rating' then rating
	when #{vo.sort,jdbcType=VARCHAR}='date' then review_id
	else review_id
	end desc
OFFSET (#{vo.page}-1) * #{vo.perPageNum} ROWS
FETCH NEXT #{vo.perPageNum} ROWS ONLY
</select>

<select id="selectMyReview" parameterType="map" resultType="com.human.dto.ReviewDto">
select * from review where customer_id=#{customer_id}
OFFSET (#{page}-1) * #{perPageNum} ROWS
FETCH NEXT #{perPageNum} ROWS ONLY
</select>

<select id="avgRating" resultType="Double">
select round(avg(rating),1) from review where musical_id=#{musical_id, jdbcType=INTEGER}
</select>

<insert id="insert" >
insert into review(review_id,customer_id,musical_id,content,rating,review_date)
 values(review_seq.nextval,#{customer_id},#{musical_id},#{content},#{rating},sysdate)
</insert>
<select id="totalCount" resultType="Integer">
SELECT COUNT(*)
FROM review
WHERE (musical_id = #{musical_id} OR #{musical_id} IS NULL)
  AND (customer_id = #{customer_id} OR #{customer_id} IS NULL)
</select>

<delete id="delete">
delete review where review_id=#{review_id}
</delete>

<update id="update">
update review set review_id=#{review_id},customer_id=#{customer_id},musical_id=#{musical_id},content=#{content},rating=#{rating},review_date=#{review_date}
</update>

</mapper>









